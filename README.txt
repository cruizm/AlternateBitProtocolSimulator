This folder contains a simulator for an ALTERNATE BIT PROTOCOL implemented in Cadmium

/**************************/
/****FILES ORGANIZATION****/
/**************************/

README.txt	

src [This folder contains the source code for the message and top model]
	data_structures [Contains the source code for the top message]
	top_model [Contains the source code for the top_model]
lib [This folder contains the third party header files]
	vendor[This folder contains 3rd party header files needed in the project]
		iestream.hpp
		NDTime.hpp
	cadmium-master[contains cadmium files]
	DESTimes-master[contains destimes files]
	
include [This folder contains the header files used]
	atomics
		receiverCadmium.hpp
		senderCadmium.hpp
		subnetCadmium.hpp
	data_structures [contains message header file]
		message.hpp
		
test [This folder the unit test for the different include files]
    data [This folder contains test input output files]
		receiver [This folder contains the input output files foe the unit test of the receiver]
		sender[This folder contains the input output files foe the unit test of the sender]
		subnet[This folder contains the input output files foe the unit test of the subnet]
		
	src [This folder contains the source code for the sender,receiver and subnet]
		receiver[This folder contains the source code for the receiver]
			main.cpp
		sender[This folder contains the source code for the sender]
			main.cpp
		subnet[This folder contains the source code for the subnet]
			main.cpp

doc [contains documents related to the project]

data [contains input/output files required/generated by the ABP simulator.
	input_abp_0.txt
	input_abp_1.txt
	abp_output_0.txt
	abp_output_1.txt
makefile [make file to compile the project]
	
/*************/
/****STEPS****/
/*************/

0 - alternatebitprotocol.doc contains the explanation of this simulator

1 - Run the unit tests
	2.1. Run subnet test
		1 - Open the terminal. Press in your keyboard Ctrl+Alt+t
		2 - Set the command prompt in the project folder. To do so, type in the terminal the path to this folder.
			Example: cd Documents/AlternateBitProtocol
		3 - To compile the test, type in the terminal:
			make clean; make all
		4 - To run the test, change directory to bin folder where the executables are located. For example: cd bin. type in the terminal "./NAME_OF_THE_COMPILED_FILE". For this specific test you need to type:
			./SUBNET_TEST
		5 - To check the output of the test, open  "test/data/subnet/subnet_test_output.txt"
	2.2. To run receiver and sender tests, the steps are analogous to 2.1, just select the appropriate path
			
3 - Run the simulator
	1 - Open the terminal. Press in your keyboard Ctrl+Alt+t
	2 - Set the command prompt in the project folder. To do so, type in the terminal the path to this folder.
		Example: cd Documents/AlternateBitProtocol
	3 - To compile the project, type in the terminal:
		make clean; make all
	4 - To run the simulation, type in the terminal "./NAME_OF_THE_COMPILED_FILE NAME_OF_THE_INPUT_FILE". For this test you need to type:
		./ABP ../data/input_abp_0
	5 - To check the output of the simulation, open  "data/abp_output.txt"
	6 - To execute the simulator with different inputs
		6.1. Create new .txt files with the same structure as input_abp_0.txt or input_abp_1.txt
		6.2. Run the simulator using the instructions in step 4
		6.3. If you want to keep the output, rename abp_output.txt. To do so, type in the terminal: "mv abp_output.txt NEW_NAME"
			Example: mv abp_output.txt abp_output_0.txt